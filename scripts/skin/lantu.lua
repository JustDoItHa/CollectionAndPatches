bit32={};local v0=32;local v1=2^v0 ;bit32.bnot=function(v25) v25=v25%v1 ;return (v1-1) -v25 ;end;bit32.band=function(v26,v27) if (v27==255) then return v26%256 ;end if (v27==65535) then return v26%65536 ;end if (v27==4294967295) then return v26%4294967296 ;end v26,v27=v26%v1 ,v27%v1 ;local v28=0;local v29=1;for v58=1,v0 do local v59,v60=v26%2 ,v27%2 ;v26,v27=math.floor(v26/2 ),math.floor(v27/2 );if ((v59 + v60)==2) then v28=v28 + v29 ;end v29=2 * v29 ;end return v28;end;bit32.bor=function(v30,v31) if (v31==255) then return (v30-(v30%256)) + 255 ;end if (v31==65535) then return (v30-(v30%65536)) + 65535 ;end if (v31==4294967295) then return 4294967295;end v30,v31=v30%v1 ,v31%v1 ;local v32=0;local v33=1;for v61=1,v0 do local v62,v63=v30%2 ,v31%2 ;v30,v31=math.floor(v30/2 ),math.floor(v31/2 );if ((v62 + v63)>=1) then v32=v32 + v33 ;end v33=2 * v33 ;end return v32;end;bit32.bxor=function(v34,v35) v34,v35=v34%v1 ,v35%v1 ;local v36=0;local v37=1;for v64=1,v0 do local v65,v66=v34%2 ,v35%2 ;v34,v35=math.floor(v34/2 ),math.floor(v35/2 );if ((v65 + v66)==1) then v36=v36 + v37 ;end v37=2 * v37 ;end return v36;end;bit32.lshift=function(v38,v39) if (math.abs(v39)>=v0) then return 0;end v38=v38%v1 ;if (v39<0) then return math.floor(v38 * (2^v39) );else return (v38 * (2^v39))%v1 ;end end;bit32.rshift=function(v40,v41) if (math.abs(v41)>=v0) then return 0;end v40=v40%v1 ;if (v41>0) then return math.floor(v40 * (2^ -v41) );else return (v40 * (2^ -v41))%v1 ;end end;bit32.arshift=function(v42,v43) if (math.abs(v43)>=v0) then return 0;end v42=v42%v1 ;if (v43>0) then local v100=0;if (v42>=(v1/2)) then v100=v1-(2^(v0-v43)) ;end return math.floor(v42 * (2^ -v43) ) + v100 ;else return (v42 * (2^ -v43))%v1 ;end end;local v9=tonumber;local v10=string['byte'];local v11=string['char'];local v12=string['sub'];local v13=string['gsub'];local v14=string['rep'];local v15=table['concat'];local v16=table['insert'];local v17=math['ldexp'];local v18=getfenv or function() return _ENV;end ;local v19=setmetatable;local v20=pcall;local v21=select;local v22=unpack or table['unpack'] ;local v23=tonumber;local function v24(v44,v45,...) local v46=1;local v47;v44=v13(v12(v44,5),"..",function(v67) if ((v10(v67,2)==79) or (2066==932)) then v47=v9(v12(v67,1,1));return "";else local v125=v11(v9(v67,16));if v47 then local v135=v14(v125,v47);v47=nil;return v135;else return v125;end end end);local function v48(v68,v69,v70) if v70 then local v126=(v68/(2^(v69-1)))%(2^(((v70-1) -(v69-1)) + 1)) ;return v126-(v126%1) ;else local v127=2^(v69-1) ;return (((v68%(v127 + v127))>=v127) and 1) or 0 ;end end local function v49() local v71=v10(v44,v46,v46);v46=v46 + 1 ;return v71;end local function v50() local v72,v73=v10(v44,v46,v46 + 2 );v46=v46 + 2 ;return (v73 * 256) + v72 ;end local function v51() local v74,v75,v76,v77=v10(v44,v46,v46 + 3 );v46=v46 + 4 ;return (v77 * 16777216) + (v76 * 65536) + (v75 * 256) + v74 ;end local function v52() local v78=v51();local v79=v51();local v80=1;local v81=(v48(v79,1,20) * (2^32)) + v78 ;local v82=v48(v79,21,31);local v83=((v48(v79,32)==1) and  -1) or 1 ;if (v82==0) then if ((4825<4843) and (v81==0)) then return v83 * 0 ;else v82=1;v80=0;end elseif (v82==2047) then return ((v81==0) and (v83 * (1/0))) or (v83 * NaN) ;end return v17(v83,v82-1023 ) * (v80 + (v81/(2^52))) ;end local function v53(v84) local v85;if ( not v84 or (4593<=2672) or (3877>=4537)) then v84=v51();if ((v84==0) or (1168>3156) or (4315<1726)) then return "";end end v85=v12(v44,v46,(v46 + v84) -1 );v46=v46 + v84 ;local v86={};for v101=1, #v85 do v86[v101]=v11(v10(v12(v85,v101,v101)));end return v15(v86);end local v54=v51;local function v55(...) return {...},v21("#",...);end local function v56() local v87={};local v88={};local v89={};local v90={v87,v88,nil,v89};local v91=v51();local v92={};for v103=1,v91 do local v104=v49();local v105;if ((v104==1) or (3679<625)) then v105=v49()~=0 ;elseif ((v104==2) or (4625<632)) then v105=v52();elseif ((v104==3) or (572>4486)) then v105=v53();end v92[v103]=v105;end v90[3]=v49();for v107=1,v51() do local v108=v49();if ((v48(v108,1,1)==0) or (83>1780)) then local v131=v48(v108,2,3);local v132=v48(v108,4,6);local v133={v50(),v50(),nil,nil};if (v131==0) then v133[3]=v50();v133[4]=v50();elseif ((1404==1404) and (v131==1)) then v133[3]=v51();elseif ((546<=1077) and (v131==2)) then v133[3]=v51() -(2^16) ;elseif ((v131==3) or (3748<2212)) then v133[3]=v51() -(2^16) ;v133[4]=v50();end if ((v48(v132,1,1)==1) or (1180==2180)) then v133[2]=v92[v133[2]];end if ((4090<4653) and (v48(v132,2,2)==1)) then v133[3]=v92[v133[3]];end if ((v48(v132,3,3)==1) or (2652<196)) then v133[4]=v92[v133[4]];end v87[v107]=v133;end end for v109=1,v51() do v88[v109-1 ]=v56();end return v90;end local function v57(v94,v95,v96) local v97=v94[1];local v98=v94[2];local v99=v94[3];return function(...) local v111=v97;local v112=v98;local v113=v99;local v114=v55;local v115=1;local v116= -1;local v117={};local v118={...};local v119=v21("#",...) -1 ;local v120={};local v121={};for v128=0,v119 do if ((4135<4817) and (v128>=v113)) then v117[v128-v113 ]=v118[v128 + 1 ];else v121[v128]=v118[v128 + 1 ];end end local v122=(v119-v113) + 1 ;local v123;local v124;while true do v123=v111[v115];v124=v123[1];if ((272==272) and (v124<=38)) then if ((v124<=18) or (996>4301)) then if (v124<=8) then if ((4070>687) and (v124<=3)) then if (v124<=1) then if ((v124>0) or (656>=3330)) then v121[v123[2]]=v123[3]~=0 ;v115=v115 + 1 ;else v121[v123[2]]();end elseif (((100<=3123) and (v124==2)) or (2492<=335)) then v121[v123[2]][v123[3]]=v121[v123[4]];else local v155=v123[2];do return v22(v121,v155,v155 + v123[3] );end end elseif ((4322>=2562) and (v124<=5)) then if (v124==4) then if ((v121[v123[2]]==v123[4]) or (3637>=3770)) then v115=v115 + 1 ;else v115=v123[3];end else local v156=v123[2];v121[v156](v22(v121,v156 + 1 ,v123[3]));end elseif ((v124<=6) or (1369>4987) or (2379>4578)) then local v157=v123[2];v121[v157]=v121[v157](v22(v121,v157 + 1 ,v123[3]));elseif ((v124>7) or (863>=4584) or (483>743)) then if (v121[v123[2]] or (724>=1668)) then v115=v115 + 1 ;else v115=v123[3];end else v121[v123[2]]=v121[v123[3]][v121[v123[4]]];end elseif ((2454>578) and (v124<=13)) then if ((930<4458) and (v124<=10)) then if ((662<=972) and (428<1804) and (v124>9)) then if (v123[2]==v121[v123[4]]) then v115=v115 + 1 ;else v115=v123[3];end else v121[v123[2]]=v123[3] -v121[v123[4]] ;end elseif (v124<=11) then v121[v123[2]]=v123[3]~=0 ;v115=v115 + 1 ;elseif ((4370==4370) and (v124>12)) then local v257=v123[2];do return v22(v121,v257,v116);end else v121[v123[2]]=v96[v123[3]];end elseif ((v124<=15) or (4762<=861)) then if ((v124==14) or (1412==4264)) then v121[v123[2]]=v123[3]~=0 ;else v121[v123[2]]=v121[v123[3]];end elseif ((v124<=16) or (3325>4613)) then local v164=v123[2];v121[v164]=v121[v164](v22(v121,v164 + 1 ,v123[3]));elseif ((v124==17) or (4950<=4553)) then v115=v123[3];else local v261=v123[2];local v262=v123[4];local v263=v261 + 2 ;local v264={v121[v261](v121[v261 + 1 ],v121[v263])};for v306=1,v262 do v121[v263 + v306 ]=v264[v306];end local v265=v264[1];if v265 then v121[v263]=v265;v115=v123[3];else v115=v115 + 1 ;end end elseif (((2665<=3933) and (v124<=28)) or (3168<2153)) then if (v124<=23) then if (((3273==3273) and (v124<=20)) or (4976<1332)) then if ((4628==4628) and (3824>409) and (v124==19)) then v121[v123[2]]=v121[v123[3]][v123[4]];else local v168=v123[2];do return v22(v121,v168,v116);end end elseif ((2087==2087) and (v124<=21)) then v121[v123[2]]=v121[v123[3]] + v121[v123[4]] ;elseif ((v124>22) or (3404>4503)) then do return;end else local v266=v123[2];local v267=v121[v266];local v268=v123[3];for v309=1,v268 do v267[v309]=v121[v266 + v309 ];end end elseif ((v124<=25) or (54==395)) then if ((82==82) and (v124>24)) then do return v121[v123[2]];end elseif (v123[2]==v121[v123[4]]) then v115=v115 + 1 ;else v115=v123[3];end elseif ((v124<=26) or (581<282)) then v121[v123[2]]=v121[v123[3]][v121[v123[4]]];elseif ((v124==27) or (3506<=1309)) then local v270=v123[2];local v271=v121[v123[3]];v121[v270 + 1 ]=v271;v121[v270]=v271[v123[4]];else for v312=v123[2],v123[3] do v121[v312]=nil;end end elseif ((2955==2955) and (v124<=33)) then if ((v124<=30) or (4609<2495)) then if (v124==29) then local v172=v123[2];v121[v172](v22(v121,v172 + 1 ,v123[3]));else local v173=v123[3];local v174=v121[v173];for v223=v173 + 1 ,v123[4] do v174=v174   .. v121[v223] ;end v121[v123[2]]=v174;end elseif ((1152==1152) and (v124<=31)) then local v176=v123[2];v121[v176](v121[v176 + 1 ]);elseif ((1896<=3422) and ((v124>32) or (2903==1495))) then v121[v123[2]][v123[3]]=v123[4];elseif (v121[v123[2]]==v123[4]) then v115=v115 + 1 ;else v115=v123[3];end elseif (v124<=35) then if (v124>34) then v121[v123[2]]=v95[v123[3]];elseif ((4546>=2275) and  not v121[v123[2]]) then v115=v115 + 1 ;else v115=v123[3];end elseif (((819>=22) and (v124<=36)) or (990>1620)) then v121[v123[2]][v123[3]]=v121[v123[4]];elseif (((3162==3162) and (v124==37)) or (877>4695)) then v121[v123[2]]=v121[v123[3]];else do return;end end elseif (v124<=57) then if ((v124<=47) or (2369>4429)) then if ((2691>=1851) and (4095>=3183) and (v124<=42)) then if (v124<=40) then if ((v124>39) or (2985>=4856)) then v121[v123[2]]=v121[v123[3]][v123[4]];else v121[v123[2]]=v96[v123[3]];end elseif ((4276>=1195) and ((v124>41) or (3711<1008))) then local v185=v123[2];local v186=v121[v185];for v224=v185 + 1 ,v123[3] do v16(v186,v121[v224]);end else v121[v123[2]]=v123[3];end elseif ((3232<=4690) and (v124<=44)) then if ((v124==43) or (1049<=906)) then local v189=v123[2];do return v121[v189](v22(v121,v189 + 1 ,v123[3]));end else local v190=v112[v123[3]];local v191;local v192={};v191=v19({},{__index=function(v225,v226) local v227=v192[v226];return v227[1][v227[2]];end,__newindex=function(v228,v229,v230) local v231=v192[v229];v231[1][v231[2]]=v230;end});for v233=1,v123[4] do v115=v115 + 1 ;local v234=v111[v115];if (v234[1]==15) then v192[v233-1 ]={v121,v234[3]};else v192[v233-1 ]={v95,v234[3]};end v120[ #v120 + 1 ]=v192;end v121[v123[2]]=v57(v190,v191,v96);end elseif ((4513>2726) and (v124<=45)) then v121[v123[2]]=v95[v123[3]];elseif ((v124>46) or (1481>=2658)) then v121[v123[2]]=v57(v112[v123[3]],nil,v96);else do return v121[v123[2]];end end elseif ((v124<=52) or (896>=3146)) then if (v124<=49) then if ((3061>=2958) and ((v124>48) or (3220==1364))) then v121[v123[2]]=v123[3] -v121[v123[4]] ;elseif ((3187>=644) and ( not v121[v123[2]] or (1054>3392))) then v115=v115 + 1 ;else v115=v123[3];end elseif ((v124<=50) or (676>=1642)) then v121[v123[2]]=v121[v123[3]] + v121[v123[4]] ;elseif ((644<=704) and (4136>2397) and (v124>51)) then if ((958>947) and (v121[v123[2]]~=v123[4])) then v115=v115 + 1 ;else v115=v123[3];end else local v282=v123[2];local v283={v121[v282](v121[v282 + 1 ])};local v284=0;for v316=v282,v123[4] do v284=v284 + 1 ;v121[v316]=v283[v284];end end elseif (v124<=54) then if ((4492>=2654) and (v124==53)) then v121[v123[2]][v123[3]]=v123[4];elseif ((v121[v123[2]]~=v123[4]) or (4334==4245)) then v115=v115 + 1 ;else v115=v123[3];end elseif ((v124<=55) or (4276<=3031)) then local v200=v112[v123[3]];local v201;local v202={};v201=v19({},{__index=function(v236,v237) local v238=v202[v237];return v238[1][v238[2]];end,__newindex=function(v239,v240,v241) local v242=v202[v240];v242[1][v242[2]]=v241;end});for v244=1,v123[4] do v115=v115 + 1 ;local v245=v111[v115];if ((3442>=1503) and ((v245[1]==15) or (4782<=1199))) then v202[v244-1 ]={v121,v245[3]};else v202[v244-1 ]={v95,v245[3]};end v120[ #v120 + 1 ]=v202;end v121[v123[2]]=v57(v200,v201,v96);elseif ((v124>56) or (4864<1902)) then v121[v123[2]]=v123[3]~=0 ;else for v321=v123[2],v123[3] do v121[v321]=nil;end end elseif (((4839>=3700) and (v124<=67)) or (3170<=1464)) then if ((v124<=62) or (1075>1918) or (4797==4388)) then if ((551<=681) and (v124<=59)) then if ((3277>407) and (396<=3804) and (v124==58)) then local v204=v123[2];local v205=v123[4];local v206=v204 + 2 ;local v207={v121[v204](v121[v204 + 1 ],v121[v206])};for v247=1,v205 do v121[v206 + v247 ]=v207[v247];end local v208=v207[1];if ((4695>=1415) and v208) then v121[v206]=v208;v115=v123[3];else v115=v115 + 1 ;end else v121[v123[2]]=v123[3];end elseif ((v124<=60) or (3212<=944)) then v121[v123[2]]={};elseif (v124>61) then if ((v121[v123[2]]==v121[v123[4]]) or (4169==2187) or (3096<=1798)) then v115=v115 + 1 ;else v115=v123[3];end else local v289=v123[2];do return v121[v289](v22(v121,v289 + 1 ,v123[3]));end end elseif ((3537==3537) and (v124<=64)) then if ((3837>=1570) and (1406==1406) and (v124>63)) then v121[v123[2]]={};else local v213=v123[2];local v214=v121[v213];local v215=v123[3];for v250=1,v215 do v214[v250]=v121[v213 + v250 ];end end elseif ((1531<4271) and (v124<=65)) then v115=v123[3];elseif ((v124==66) or (2950==3812)) then local v290=v121[v123[4]];if  not v290 then v115=v115 + 1 ;else v121[v123[2]]=v290;v115=v123[3];end else local v291=v123[3];local v292=v121[v291];for v323=v291 + 1 ,v123[4] do v292=v292   .. v121[v323] ;end v121[v123[2]]=v292;end elseif (v124<=72) then if (v124<=69) then if ((4723>=2318) and (635==635) and (v124==68)) then if v121[v123[2]] then v115=v115 + 1 ;else v115=v123[3];end else local v217=v121[v123[4]];if ( not v217 or (2027>2852)) then v115=v115 + 1 ;else v121[v123[2]]=v217;v115=v123[3];end end elseif ((3373<=3556) and (v124<=70)) then v121[v123[2]]=v57(v112[v123[3]],nil,v96);elseif ((v124>71) or (3291<3280)) then if ((4386>=873) and (v121[v123[2]]==v121[v123[4]])) then v115=v115 + 1 ;else v115=v123[3];end else local v297=v123[2];v121[v297](v121[v297 + 1 ]);end elseif (((921<=1102) and (v124<=74)) or (1136>4317)) then if ((4748==4748) and (4706>=963) and (v124==73)) then v121[v123[2]]();else local v219=v123[2];v121[v219]=v121[v219](v121[v219 + 1 ]);end elseif ((3736<=4740) and ((v124<=75) or (960<=876))) then local v221=v123[2];v121[v221]=v121[v221](v121[v221 + 1 ]);elseif (v124>76) then local v298=v123[2];local v299=v121[v123[3]];v121[v298 + 1 ]=v299;v121[v298]=v299[v123[4]];else local v303=v123[2];local v304={v121[v303](v121[v303 + 1 ])};local v305=0;for v324=v303,v123[4] do v305=v305 + 1 ;v121[v324]=v304[v305];end end v115=v115 + 1 ;end end;end return v57(v56(),{},v45)(...);end return vv18(),...);